AWSTemplateFormatVersion: 2010-09-09

Description: This templates provisions elastic beanstalk application and environment

Parameters:
  ApplicationName:
    Default: SargeTier1 App
    Description: Please enter the application name
    Type: String

  Description:
    Default: This is Node JS Elastic Beanstalk App for Tier 1 Challenge
    Description: Please enter the description
    Type: String

  EnvironmentName:
    Default: Develop
    Description: Please enter the EnvironmentName
    Type: String

  EC2KeyName:
    Default: sarge-apper
    Description: Please enter the EC2 Key Name
    Type: String

  InstanceTypes:
    Default: "t3a.micro,t3a.small"
    ConstraintDescription: "Must be a comma seperated list of Instance Types: Refer to this link for the instance type names https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html"
    Type: String

  VPCId:
    Description: Please enter the VPC ID
    Type: AWS::EC2::VPC::Id

  DomainName:
    Default: sarge-tier1.apperdevops.com
    Description: Please enter Domain name
    Type: String

  SGName:
    Default: SargeSG
    Description: Security Group for sarge Applicate/web server resources.
    Type: String

  SGDescription:
    Default: Security Group for sarge Applicate/web server resources.
    Description: Please Enter Security Group Description
    Type: String

  Port:
    Default: 1337
    Description: Please enter a port/port range
    Type: String

  PublicCIDRs:
    Default: '33.0.0.0/24,33.0.1.0/24'
    Description: List of Public IP CDIRs
    ConstraintDescription: "Must be a comma seperated list of subnet IDs"
    Type: CommaDelimitedList

Resources:
  # SargeTierOneCert:
    # Type: AWS::CloudFormation::Stack
    # Properties:
      # TemplateURL: ../shared/certificate-manager.yaml
      # Parameters:
        # DomainName: !Ref DomainName

  SargeSG:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ../shared/app-security-group.yaml
      Parameters:
        SGName: !Ref SGName
        SGDescription: !Ref SGDescription
        VPCId: !Ref VPCId
        Port: !Ref Port
        PublicCIDRs:
          Fn::Join:
            - ','
            - !Ref PublicCIDRs

  SargeBeanstalkApp:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: !Ref ApplicationName
      Description: !Ref Description

  SargeBeanstalkEnvironment:
    DependsOn:
      - SargeBeanstalkApp
      # - SargeTierOneCert
      - SargeSG
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref SargeBeanstalkApp
      Description: !Ref Description
      EnvironmentName: !Ref EnvironmentName
      SolutionStackName: "64bit Amazon Linux 2 v5.3.0 running Node.js 14"
      OptionSettings:
        -
          Namespace: aws:autoscaling:launchconfiguration
          OptionName: EC2KeyName
          Value: !Ref EC2KeyName
        -
          Namespace: aws:autoscaling:launchconfiguration
          OptionName: IamInstanceProfile
          Value: 'aws-elasticbeanstalk-ec2-role'
        -
          Namespace: aws:autoscaling:launchconfiguration
          OptionName: SecurityGroups
          Value: !Ref SGName
        -
          Namespace: aws:autoscaling:asg
          OptionName: Availability Zones
          Value: 'Any'
        -
          Namespace: aws:autoscaling:asg
          OptionName: Cooldown
          Value: '720'
        -
          Namespace: aws:autoscaling:asg
          OptionName: Custom Availability Zones
          Value:
            Fn::Join:
            - ','
            -
              - Fn::Select: [ 0, !GetAZs 'ap-southeast-1' ]
              - Fn::Select: [ 1, !GetAZs 'ap-southeast-1' ]
        -
          Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: '4'
        -
          Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: '2'
        -
          Namespace: aws:ec2:instances
          OptionName: EnableSpot
          Value: 'true'
        -
          Namespace: aws:ec2:instances
          OptionName: InstanceTypes
          Value: 't3a.micro,t3a.small'
        -
          Namespace: aws:ec2:instances
          OptionName: SpotFleetOnDemandBase
          Value: '1'
        -
          Namespace: aws:ec2:instances
          OptionName: SpotFleetOnDemandAboveBasePercentage
          Value: '50'
        -
          Namespace: aws:elbv2:loadbalancer
          OptionName: AccessLogsS3Enabled
          Value: 'false'
        -
          Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName: DeregistrationDelay
          Value: '20'
        -
          Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName: HealthCheckInterval
          Value: '15'
        -
          Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName: HealthCheckPath
          Value: '/health'
        -
          Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName: HealthCheckTimeout
          Value: '5'
        -
          Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName:  HealthyThresholdCount
          Value: '3'
        -
          Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName:  UnhealthyThresholdCount
          Value: '3'
        -
          Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName:  Port
          Value: '80'
        -
          Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName:  Protocol
          Value: 'HTTP'
        -
          Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName:  StickinessEnabled
          Value: 'true'
        -
          Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName:  StickinessLBCookieDuration
          Value: '43200'
        # -
          # Namespace: aws:elbv2:listener:443
          # OptionName:  DefaultProcess
          # Value: https
        # -
          # Namespace: aws:elbv2:listener:443
          # OptionName:  ListenerEnabled
          # Value: true
        # -
          # Namespace: aws:elbv2:listener:443
          # OptionName:  Protocol
          # Value: HTTPS
        # -
          # Namespace: aws:elbv2:listener:443
          # OptionName:  SSLCertificateArns
          # Value:
            # Fn::GetAtt:
              # - SargeTierOneCert
              # - Outputs.Cert
        # -
          # Namespace: aws:elasticbeanstalk:environment:process:https
          # OptionName:  Port
          # Value: '443'
        # -
          # Namespace: aws:elasticbeanstalk:environment:process:https
          # OptionName:  Protocol
          # Value: HTTPS
      VersionLabel: "Initial Version"
